name: CI

on: [push]
  
  
jobs:
  tests:
    runs-on: ubuntu-latest

    # services:
    #   db:
    #     image: postgres
    #     ports:
    #       - 5432:5432
    #     env:
    #       POSTGRES_USER: postgres
    #       POSTGRES_PASSWORD: password
    #       POSTGRES_DB: flaskdb_test
    #     options: >-
    #       --health-cmd="pg_isready -U postgres -d flaskdb_test"
          

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: "3.10"
      
      - name: Create docker.env file
        run: |
          echo "STRIPE_SECRET_KEY=${{ secrets.STRIPE_SECRET_KEY }}" >> docker.env
          echo "STRIPE_PUBLISHABLE_KEY=${{ secrets.STRIPE_PUBLISHABLE_KEY }}" >> docker.env
          echo "BASE_URL=${{ secrets.BASE_URL }}" >> docker.env

      - name: Install Docker Compose
        run: |
          sudo curl -L "https://github.com/docker/compose/releases/download/$(curl -s https://api.github.com/repos/docker/compose/releases/latest | jq -r .tag_name)/docker-compose-$(uname -s)-$(uname -m)" -o /usr/local/bin/docker-compose
          sudo chmod +x /usr/local/bin/docker-compose

      - name: Build and run Docker Compose
        run: |
          docker-compose up -d --build

      - name: Wait for services to be ready
        run: |
          docker-compose exec -T flask_app sh -c 'while ! nc -z db 5432; do sleep 1; done'

      - name: Run tests
        run: |
          docker-compose exec -T flask_app pytest

      - name: Shut down Docker Compose
        if: always()
        run: |
          docker-compose down
